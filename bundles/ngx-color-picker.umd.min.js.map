{"version":3,"sources":["../../projects/lib/src/lib/formats.ts","../../projects/lib/src/lib/helpers.ts","../../projects/lib/src/lib/color-picker.service.ts","../../projects/lib/src/lib/color-picker.component.ts","../../projects/lib/src/lib/color-picker.directive.ts","../../projects/lib/src/lib/color-picker.module.ts"],"names":["ColorFormats","r","g","b","a","this","h","s","v","l","c","m","y","k","TextDirective","newValue","EventEmitter","prototype","inputChange","event","value","target","undefined","rg","emit","numeric","parseFloat","Directive","args","selector","Input","Output","HostListener","SliderDirective","elRef","_this","dragEnd","dragStart","listenerMove","move","listenerStop","stop","mouseDown","start","touchStart","preventDefault","setCursor","stopPropagation","document","addEventListener","removeEventListener","getX","position","nativeElement","getBoundingClientRect","pageX","touches","left","window","pageXOffset","getY","pageY","top","pageYOffset","width","offsetWidth","height","offsetHeight","x","Math","max","min","rgX","rgY","ElementRef","SliderPosition","SliderDimension","ColorPickerService","active","setActive","cpDialogDisplay","closeDialog","hsva2hsla","hsva","Hsla","abs","hsla2hsva","hsla","Hsva","hsvaToRgba","i","floor","f","p","q","t","Rgba","cmykToRgb","cmyk","rgbaToCmyk","rgba","Cmyk","rgbaToHsva","d","rgbaToHex","allowHex8","hex","toString","substr","round","normalizeCMYK","denormalizeCMYK","denormalizeRGBA","stringToHsva","colorString","toLowerCase","stringParsers","re","parse","execResult","parseInt","isNaN","key","push","hasOwnProperty","parser","match","exec","color","outputFormat","alphaChannel","hslaText","Injectable","providedIn","ColorPickerComponent","cdRef","service","isIE10","dialogArrowSize","dialogArrowOffset","dialogInputFields","HEX","RGBA","HSLA","CMYK","useRootViewContainer","handleEsc","show","onCancelColor","handleEnter","onAcceptColor","ngOnInit","slider","hueWidth","hueSlider","alphaWidth","alphaSlider","sliderDimMax","cpWidth","cpCmykEnabled","format","cpOutputFormat","listenerMouseDown","onMouseDown","listenerResize","onResize","openDialog","initialColor","ngOnDestroy","ngAfterViewInit","updateColorPicker","detectChanges","directiveElementRef","setInitialColor","setColorFromString","openColorPicker","closeColorPicker","setupDialog","instance","elementRef","cpHeight","cpFallbackColor","cpColorMode","cpAlphaChannel","cpDisableInput","cpIgnoredElements","cpSaveClickOutside","cpCloseClickOutside","cpUseRootViewContainer","cpPosition","cpPositionOffset","cpPositionRelativeToArrow","cpPresetLabel","cpPresetColors","cpPresetColorsClass","cpMaxPresetColorsLength","cpPresetEmptyMessage","cpPresetEmptyMessageClass","cpOKButton","cpOKButtonClass","cpOKButtonText","cpCancelButton","cpCancelButtonClass","cpCancelButtonText","cpAddColorButton","cpAddColorButtonClass","cpAddColorButtonText","cpRemoveColorButtonClass","cpTriggerElement","setColorMode","ua","navigator","userAgent","msie","indexOf","substring","detectIE","directiveInstance","fallbackColor","setPresetConfig","mode","toUpperCase","update","sliderH","setDialogPosition","onDragEnd","sliderDragEnd","outputColor","onDragStart","sliderDragStart","isDescendant","filter","item","length","colorSelected","cmykChanged","cmykColor","colorChanged","colorCanceled","onFormatToggle","change","availableFormats","nextFormat","onColorChange","sliderChanged","onHueChange","onValueChange","onAlphaChange","onHexInput","validHex","valid","test","split","map","join","inputChanged","input","onRedInput","onBlueInput","onGreenInput","onHueInput","onValueInput","onAlphaInput","onLightnessInput","onSaturationInput","onCyanInput","onMagentaInput","onYellowInput","onBlackInput","onAddPresetColor","concat","presetColorsChanged","onRemovePresetColor","hidden","setTimeout","stateChanged","cmykInput","hue","lastOutput","rgbaText","cmykText","hexText","hexAlpha","hueSliderColor","alphaSliderColor","selectedColor","alpha","transform","style","parentNode","transformNode","node","dialogHeight","dialogElement","tagName","getComputedStyle","getPropertyValue","boxDirective","createDialogBox","HTMLUnknownElement","boxParent","usePosition","elBounds","triggerElBounds","usePositionX","usePositionY","bottom","right","collisionTop","collisionBottom","innerHeight","documentElement","clientHeight","collisionLeft","collisionRight","innerWidth","clientWidth","reduce","prev","next","calculateAutoPositioning","arrowTop","cpUsePosition","parent","child","element","offset","Component","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","ViewChild","static","ColorPickerDirective","injector","cfr","appRef","vcRef","_service","dialogCreated","ignoreChanges","viewAttachedToAppRef","cpToggle","cpDisabled","cpInputChange","cpToggleChange","cpSliderChange","cpSliderDragEnd","cpSliderDragStart","colorPickerOpen","colorPickerClose","colorPickerCancel","colorPickerSelect","colorPickerChange","cpCmykColorChange","cpPresetColorsChange","handleClick","inputFocus","handleFocus","handleInput","cmpRef","detachView","hostView","destroy","dialog","ngOnChanges","changes","currentValue","colorPicker","changeDetectorRef","classOfRootComponent","componentTypes","appInstance","get","Injector","NULL","viewContainerRef","console","warn","compFactory","resolveComponentFactory","create","attachView","body","appendChild","rootNodes","ReflectiveInjector","fromResolvedProviders","parentInjector","createComponent","state","ignore","ignored","activeElement","exportAs","ComponentFactoryResolver","ApplicationRef","ViewContainerRef","NgModule","imports","CommonModule","exports","declarations","entryComponents"],"mappings":"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","sourcesContent":["export enum ColorFormats {\n  HEX,\n  RGBA,\n  HSLA,\n  CMYK\n}\n\nexport class Rgba {\n  constructor(public r: number, public g: number, public b: number, public a: number) {}\n}\n\nexport class Hsva {\n  constructor(public h: number, public s: number, public v: number, public a: number) {}\n}\n\nexport class Hsla {\n  constructor(public h: number, public s: number, public l: number, public a: number) {}\n}\n\nexport class Cmyk {\n  constructor(public c: number, public m: number, public y: number, public k: number, public a: number = 1) {}\n}\n","import { Directive, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\n\nexport type ColorMode = 'color' | 'c' | '1' |\n  'grayscale' | 'g' | '2' | 'presets' | 'p' | '3';\n\nexport type AlphaChannel = 'enabled' | 'disabled' | 'always' | 'forced';\n\nexport type BoundingRectangle = {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  height: number;\n  width: number;\n};\n\nexport type OutputFormat = 'auto' | 'hex' | 'rgba' | 'hsla';\n\nexport function calculateAutoPositioning(elBounds: BoundingRectangle, triggerElBounds: BoundingRectangle): string {\n  // Defaults\n  let usePositionX = 'right';\n  let usePositionY = 'bottom';\n  // Calculate collisions\n  const { height, width } = elBounds;\n  const { top, left } = triggerElBounds;\n  const bottom = top + triggerElBounds.height;\n  const right = left + triggerElBounds.width;\n\n  const collisionTop = top - height < 0;\n  const collisionBottom = bottom + height > (window.innerHeight || document.documentElement.clientHeight);\n  const collisionLeft = left - width < 0;\n  const collisionRight = right + width > (window.innerWidth || document.documentElement.clientWidth);\n  const collisionAll = collisionTop && collisionBottom && collisionLeft && collisionRight;\n\n  // Generate X & Y position values\n  if (collisionBottom) {\n    usePositionY = 'top';\n  }\n\n  if (collisionTop) {\n    usePositionY = 'bottom';\n  }\n\n  if (collisionLeft) {\n    usePositionX = 'right';\n  }\n\n  if (collisionRight) {\n    usePositionX = 'left';\n  }\n\n\n  // Choose the largest gap available\n  if (collisionAll) {\n    const postions = ['left', 'right', 'top', 'bottom'];\n    return postions.reduce((prev, next) => elBounds[prev] > elBounds[next] ? prev : next);\n  }\n\n  if ((collisionLeft && collisionRight)) {\n    if (collisionTop) { return 'bottom'; }\n    if (collisionBottom) { return 'top'; }\n    return top > bottom ? 'top' : 'bottom';\n  }\n\n  if ((collisionTop && collisionBottom)) {\n    if (collisionLeft) { return 'right'; }\n    if (collisionRight) { return 'left'; }\n    return left > right ? 'left' : 'right';\n  }\n\n  return `${usePositionY}-${usePositionX}`;\n}\n\nexport function detectIE(): boolean | number {\n  let ua = '';\n\n  if (typeof navigator !== 'undefined') {\n    ua = navigator.userAgent.toLowerCase();\n  }\n\n  const msie = ua.indexOf('msie ');\n\n  if (msie > 0) {\n    // IE 10 or older => return version number\n    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n  }\n\n  // Other browser\n  return false;\n}\n\n@Directive({\n  selector: '[text]'\n})\nexport class TextDirective {\n  @Input() rg: number;\n  @Input() text: any;\n\n  @Output() newValue = new EventEmitter<any>();\n\n  @HostListener('input', ['$event']) inputChange(event: any): void {\n    const value = event.target.value;\n\n    if (this.rg === undefined) {\n      this.newValue.emit(value);\n    } else {\n      const numeric = parseFloat(value);\n\n      this.newValue.emit({ v: numeric, rg: this.rg });\n    }\n  }\n}\n\n@Directive({\n  selector: '[slider]'\n})\nexport class SliderDirective {\n  private listenerMove: any;\n  private listenerStop: any;\n\n  @Input() rgX: number;\n  @Input() rgY: number;\n\n  @Input() slider: string;\n\n  @Output() dragEnd = new EventEmitter();\n  @Output() dragStart = new EventEmitter();\n\n  @Output() newValue = new EventEmitter<any>();\n\n  @HostListener('mousedown', ['$event']) mouseDown(event: any): void {\n    this.start(event);\n  }\n\n  @HostListener('touchstart', ['$event']) touchStart(event: any): void {\n    this.start(event);\n  }\n\n  constructor(private elRef: ElementRef) {\n    this.listenerMove = (event: any) => this.move(event);\n\n    this.listenerStop = () => this.stop();\n  }\n\n  private move(event: any): void {\n    event.preventDefault();\n\n    this.setCursor(event);\n  }\n\n  private start(event: any): void {\n    this.setCursor(event);\n\n    event.stopPropagation();\n\n    document.addEventListener('mouseup', this.listenerStop);\n    document.addEventListener('touchend', this.listenerStop);\n    document.addEventListener('mousemove', this.listenerMove);\n    document.addEventListener('touchmove', this.listenerMove);\n\n    this.dragStart.emit();\n  }\n\n  private stop(): void {\n    document.removeEventListener('mouseup', this.listenerStop);\n    document.removeEventListener('touchend', this.listenerStop);\n    document.removeEventListener('mousemove', this.listenerMove);\n    document.removeEventListener('touchmove', this.listenerMove);\n\n    this.dragEnd.emit();\n  }\n\n  private getX(event: any): number {\n    const position = this.elRef.nativeElement.getBoundingClientRect();\n\n    const pageX = (event.pageX !== undefined) ? event.pageX : event.touches[0].pageX;\n\n    return pageX - position.left - window.pageXOffset;\n  }\n\n  private getY(event: any): number {\n    const position = this.elRef.nativeElement.getBoundingClientRect();\n\n    const pageY = (event.pageY !== undefined) ? event.pageY : event.touches[0].pageY;\n\n    return pageY - position.top - window.pageYOffset;\n  }\n\n  private setCursor(event: any): void {\n    const width = this.elRef.nativeElement.offsetWidth;\n    const height = this.elRef.nativeElement.offsetHeight;\n\n    const x = Math.max(0, Math.min(this.getX(event), width));\n    const y = Math.max(0, Math.min(this.getY(event), height));\n\n    if (this.rgX !== undefined && this.rgY !== undefined) {\n      this.newValue.emit({ s: x / width, v: (1 - y / height), rgX: this.rgX, rgY: this.rgY });\n    } else if (this.rgX === undefined && this.rgY !== undefined) {\n      this.newValue.emit({ v: y / height, rgY: this.rgY });\n    } else if (this.rgX !== undefined && this.rgY === undefined) {\n      this.newValue.emit({ v: x / width, rgX: this.rgX });\n    }\n  }\n}\n\nexport class SliderPosition {\n  constructor(public h: number, public s: number, public v: number, public a: number) {}\n}\n\nexport class SliderDimension {\n  constructor(public h: number, public s: number, public v: number, public a: number) {}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Cmyk, Rgba, Hsla, Hsva } from './formats';\n\nimport { ColorPickerComponent } from './color-picker.component';\n\n@Injectable({ \n  providedIn: 'root'\n})\nexport class ColorPickerService {\n  private active: ColorPickerComponent | null = null;\n\n  constructor() {}\n\n  public setActive(active: ColorPickerComponent | null): void {\n    if (this.active && this.active !== active && this.active.cpDialogDisplay !== 'inline') {\n      this.active.closeDialog();\n    }\n\n    this.active = active;\n  }\n\n  public hsva2hsla(hsva: Hsva): Hsla {\n    const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n\n    if (v === 0) {\n      return new Hsla(h, 0, 0, a);\n    } else if (s === 0 && v === 1) {\n      return new Hsla(h, 1, 1, a);\n    } else {\n      const l = v * (2 - s) / 2;\n\n      return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a);\n    }\n  }\n\n  public hsla2hsva(hsla: Hsla): Hsva {\n    const h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1);\n    const l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\n\n    if (l === 0) {\n      return new Hsva(h, 0, 0, a);\n    } else {\n      const v = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n\n      return new Hsva(h, 2 * (v - l) / v, v, a);\n    }\n  }\n\n  public hsvaToRgba(hsva: Hsva): Rgba {\n    let r: number, g: number, b: number;\n\n    const h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v, g = t, b = p;\n        break;\n      case 1:\n        r = q, g = v, b = p;\n        break;\n      case 2:\n        r = p, g = v, b = t;\n        break;\n      case 3:\n        r = p, g = q, b = v;\n        break;\n      case 4:\n        r = t, g = p, b = v;\n        break;\n      case 5:\n        r = v, g = p, b = q;\n        break;\n      default:\n        r = 0, g = 0, b = 0;\n    }\n\n    return new Rgba(r, g, b, a);\n  }\n\n  public cmykToRgb(cmyk: Cmyk): Rgba {\n    const r = ( 1 - cmyk.c ) * (1 - cmyk.k);\n    const g = ( 1 - cmyk.m ) * (1 - cmyk.k);\n    const b = ( 1 - cmyk.y ) * (1 - cmyk.k);\n\n    return new Rgba(r, g, b, cmyk.a);\n  }\n\n  public rgbaToCmyk(rgba: Rgba): Cmyk {\n    const k: number = 1 - Math.max(rgba.r, rgba.g, rgba.b);\n\n    if (k === 1) {\n      return new Cmyk(0, 0, 0, 1, rgba.a);\n    } else {\n      const c = (1 - rgba.r - k) / (1 - k);\n      const m = (1 - rgba.g - k) / (1 - k);\n      const y = (1 - rgba.b - k) / (1 - k);\n\n      return new Cmyk(c, m, y, k, rgba.a);\n    }\n  }\n\n  public rgbaToHsva(rgba: Rgba): Hsva {\n    let h: number, s: number;\n\n    const r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1);\n    const b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\n\n    const max = Math.max(r, g, b), min = Math.min(r, g, b);\n\n    const v: number = max, d = max - min;\n\n    s = (max === 0) ? 0 : d / max;\n\n    if (max === min) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n        default:\n          h = 0;\n      }\n\n      h /= 6;\n    }\n\n    return new Hsva(h, s, v, a);\n  }\n\n  public rgbaToHex(rgba: Rgba, allowHex8?: boolean): string {\n    /* tslint:disable:no-bitwise */\n    let hex = '#' + ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16).substr(1);\n\n    if (allowHex8) {\n      hex += ((1 << 8) | Math.round(rgba.a * 255)).toString(16).substr(1);\n    }\n    /* tslint:enable:no-bitwise */\n\n    return hex;\n  }\n\n  public normalizeCMYK(cmyk: Cmyk): Cmyk {\n    return new Cmyk(cmyk.c / 100, cmyk.m / 100, cmyk.y / 100, cmyk.k / 100, cmyk.a);\n  }\n\n  public denormalizeCMYK(cmyk: Cmyk): Cmyk {\n    return new Cmyk(Math.floor(cmyk.c * 100), Math.floor(cmyk.m * 100), Math.floor(cmyk.y * 100),\n      Math.floor(cmyk.k * 100), cmyk.a);\n  }\n\n  public denormalizeRGBA(rgba: Rgba): Rgba {\n    return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255), Math.round(rgba.b * 255), rgba.a);\n  }\n\n  public stringToHsva(colorString: string = '', allowHex8: boolean = false): Hsva | null {\n    let hsva: Hsva | null = null;\n\n    colorString = (colorString || '').toLowerCase();\n\n    const stringParsers = [\n      {\n        re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n        parse: function(execResult: any) {\n          return new Rgba(parseInt(execResult[2], 10) / 255,\n            parseInt(execResult[3], 10) / 255,\n            parseInt(execResult[4], 10) / 255,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      }, {\n        re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n        parse: function(execResult: any) {\n          return new Hsla(parseInt(execResult[2], 10) / 360,\n            parseInt(execResult[3], 10) / 100,\n            parseInt(execResult[4], 10) / 100,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      }\n    ];\n\n    if (allowHex8) {\n      stringParsers.push({\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})?$/,\n        parse: function(execResult: any) {\n          return new Rgba(parseInt(execResult[1], 16) / 255,\n            parseInt(execResult[2], 16) / 255,\n            parseInt(execResult[3], 16) / 255,\n            parseInt(execResult[4] || 'FF', 16) / 255);\n        }\n      });\n    } else {\n      stringParsers.push({\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n        parse: function(execResult: any) {\n          return new Rgba(parseInt(execResult[1], 16) / 255,\n            parseInt(execResult[2], 16) / 255,\n            parseInt(execResult[3], 16) / 255,\n            1);\n        }\n      });\n    }\n\n    stringParsers.push({\n      re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n      parse: function(execResult: any) {\n        return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,\n          parseInt(execResult[2] + execResult[2], 16) / 255,\n          parseInt(execResult[3] + execResult[3], 16) / 255,\n          1);\n      }\n    });\n\n    for (const key in stringParsers) {\n      if (stringParsers.hasOwnProperty(key)) {\n        const parser = stringParsers[key];\n\n        const match = parser.re.exec(colorString), color: any = match && parser.parse(match);\n\n        if (color) {\n          if (color instanceof Rgba) {\n            hsva = this.rgbaToHsva(color);\n          } else if (color instanceof Hsla) {\n            hsva = this.hsla2hsva(color);\n          }\n\n          return hsva;\n        }\n      }\n    }\n\n    return hsva;\n  }\n\n  public outputFormat(hsva: Hsva, outputFormat: string, alphaChannel: string | null): string {\n    if (outputFormat === 'auto') {\n      outputFormat = hsva.a < 1 ? 'rgba' : 'hex';\n    }\n\n    switch (outputFormat) {\n      case 'hsla':\n        const hsla = this.hsva2hsla(hsva);\n\n        const hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n          Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\n\n        if (hsva.a < 1 || alphaChannel === 'always') {\n          return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%,' +\n            hslaText.a + ')';\n        } else {\n          return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)';\n        }\n\n      case 'rgba':\n        const rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n\n        if (hsva.a < 1 || alphaChannel === 'always') {\n          return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' +\n            Math.round(rgba.a * 100) / 100 + ')';\n        } else {\n          return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n        }\n\n      default:\n        const allowHex8 = (alphaChannel === 'always' || alphaChannel === 'forced');\n\n        return this.rgbaToHex(this.denormalizeRGBA(this.hsvaToRgba(hsva)), allowHex8);\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, AfterViewInit,\n  ViewChild, HostListener, ViewEncapsulation,\n  ElementRef, ChangeDetectorRef } from '@angular/core';\n\nimport { detectIE, calculateAutoPositioning } from './helpers';\n\nimport { ColorFormats, Cmyk, Hsla, Hsva, Rgba } from './formats';\nimport { AlphaChannel, OutputFormat, SliderDimension, SliderPosition } from './helpers';\n\nimport { ColorPickerService } from './color-picker.service';\n\n@Component({\n  selector: 'color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: [ './color-picker.component.css' ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ColorPickerComponent implements OnInit, OnDestroy, AfterViewInit {\n  private isIE10: boolean = false;\n\n  private cmyk: Cmyk;\n  private hsva: Hsva;\n\n  private width: number;\n  private height: number;\n\n  private cmykColor: string;\n  private outputColor: string;\n  private initialColor: string;\n  private fallbackColor: string;\n\n  private listenerResize: any;\n  private listenerMouseDown: any;\n\n  private directiveInstance: any;\n\n  private sliderH: number;\n  private sliderDimMax: SliderDimension;\n  private directiveElementRef: ElementRef;\n\n  private dialogArrowSize: number = 10;\n  private dialogArrowOffset: number = 15;\n\n  private dialogInputFields: ColorFormats[] = [\n    ColorFormats.HEX,\n    ColorFormats.RGBA,\n    ColorFormats.HSLA,\n    ColorFormats.CMYK\n  ];\n\n  private useRootViewContainer: boolean = false;\n\n  public show: boolean;\n  public hidden: boolean;\n\n  public top: number;\n  public left: number;\n  public position: string;\n\n  public format: ColorFormats;\n  public slider: SliderPosition;\n\n  public hexText: string;\n  public hexAlpha: number;\n\n  public cmykText: Cmyk;\n  public hslaText: Hsla;\n  public rgbaText: Rgba;\n\n  public arrowTop: number;\n\n  public selectedColor: string;\n  public hueSliderColor: string;\n  public alphaSliderColor: string;\n\n  public cpWidth: number;\n  public cpHeight: number;\n\n  public cpColorMode: number;\n\n  public cpCmykEnabled: boolean;\n\n  public cpAlphaChannel: AlphaChannel;\n  public cpOutputFormat: OutputFormat;\n\n  public cpDisableInput: boolean;\n  public cpDialogDisplay: string;\n\n  public cpIgnoredElements: any;\n\n  public cpSaveClickOutside: boolean;\n  public cpCloseClickOutside: boolean;\n\n  public cpPosition: string;\n  public cpUsePosition: string;\n  public cpPositionOffset: number;\n\n  public cpOKButton: boolean;\n  public cpOKButtonText: string;\n  public cpOKButtonClass: string;\n\n  public cpCancelButton: boolean;\n  public cpCancelButtonText: string;\n  public cpCancelButtonClass: string;\n\n  public cpPresetLabel: string;\n  public cpPresetColors: string[];\n  public cpPresetColorsClass: string;\n  public cpMaxPresetColorsLength: number;\n\n  public cpPresetEmptyMessage: string;\n  public cpPresetEmptyMessageClass: string;\n\n  public cpAddColorButton: boolean;\n  public cpAddColorButtonText: string;\n  public cpAddColorButtonClass: string;\n  public cpRemoveColorButtonClass: string;\n\n  public cpTriggerElement: ElementRef;\n\n  @ViewChild('dialogPopup', { static: true }) dialogElement: ElementRef;\n\n  @ViewChild('hueSlider', { static: true }) hueSlider: ElementRef;\n  @ViewChild('alphaSlider', { static: true }) alphaSlider: ElementRef;\n\n  @HostListener('document:keyup.esc', ['$event']) handleEsc(event: any): void {\n    if (this.show && this.cpDialogDisplay === 'popup') {\n      this.onCancelColor(event);\n    }\n  }\n\n  @HostListener('document:keyup.enter', ['$event']) handleEnter(event: any): void {\n    if (this.show && this.cpDialogDisplay === 'popup') {\n      this.onAcceptColor(event);\n    }\n  }\n\n  constructor(private elRef: ElementRef, private cdRef: ChangeDetectorRef, private service: ColorPickerService) {}\n\n  ngOnInit(): void {\n    this.slider = new SliderPosition(0, 0, 0, 0);\n\n    const hueWidth = this.hueSlider.nativeElement.offsetWidth || 140;\n    const alphaWidth = this.alphaSlider.nativeElement.offsetWidth || 140;\n\n    this.sliderDimMax = new SliderDimension(hueWidth, this.cpWidth, 130, alphaWidth);\n\n    if (this.cpCmykEnabled) {\n      this.format = ColorFormats.CMYK;\n    } else if (this.cpOutputFormat === 'rgba') {\n      this.format = ColorFormats.RGBA;\n    } else if (this.cpOutputFormat === 'hsla') {\n      this.format = ColorFormats.HSLA;\n    } else {\n      this.format = ColorFormats.HEX;\n    }\n\n    this.listenerMouseDown = (event: any) => { this.onMouseDown(event); };\n    this.listenerResize = () => { this.onResize(); };\n\n    this.openDialog(this.initialColor, false);\n  }\n\n  ngOnDestroy(): void {\n    this.closeDialog();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.cpWidth !== 230 || this.cpDialogDisplay === 'inline') {\n      const hueWidth = this.hueSlider.nativeElement.offsetWidth || 140;\n      const alphaWidth = this.alphaSlider.nativeElement.offsetWidth || 140;\n\n      this.sliderDimMax = new SliderDimension(hueWidth, this.cpWidth, 130, alphaWidth);\n\n      this.updateColorPicker(false);\n\n      this.cdRef.detectChanges();\n    }\n  }\n\n  public openDialog(color: any, emit: boolean = true): void {\n    this.service.setActive(this);\n\n    if (!this.width) {\n      this.cpWidth = this.directiveElementRef.nativeElement.offsetWidth;\n    }\n\n    if (!this.height) {\n      this.height = 320;\n    }\n\n    this.setInitialColor(color);\n\n    this.setColorFromString(color, emit);\n\n    this.openColorPicker();\n  }\n\n  public closeDialog(): void {\n    this.closeColorPicker();\n  }\n\n  public setupDialog(instance: any, elementRef: ElementRef, color: any,\n    cpWidth: string, cpHeight: string, cpDialogDisplay: string, cpFallbackColor: string,\n    cpColorMode: string, cpCmykEnabled: boolean, cpAlphaChannel: AlphaChannel,\n    cpOutputFormat: OutputFormat, cpDisableInput: boolean, cpIgnoredElements: any,\n    cpSaveClickOutside: boolean, cpCloseClickOutside: boolean, cpUseRootViewContainer: boolean,\n    cpPosition: string, cpPositionOffset: string, cpPositionRelativeToArrow: boolean,\n    cpPresetLabel: string, cpPresetColors: string[], cpPresetColorsClass: string,\n    cpMaxPresetColorsLength: number, cpPresetEmptyMessage: string,\n    cpPresetEmptyMessageClass: string, cpOKButton: boolean, cpOKButtonClass: string,\n    cpOKButtonText: string, cpCancelButton: boolean, cpCancelButtonClass: string,\n    cpCancelButtonText: string, cpAddColorButton: boolean, cpAddColorButtonClass: string,\n    cpAddColorButtonText: string, cpRemoveColorButtonClass: string, cpTriggerElement: ElementRef): void\n  {\n    this.setInitialColor(color);\n\n    this.setColorMode(cpColorMode);\n\n    this.isIE10 = (detectIE() === 10);\n\n    this.directiveInstance = instance;\n    this.directiveElementRef = elementRef;\n\n    this.cpDisableInput = cpDisableInput;\n\n    this.cpCmykEnabled = cpCmykEnabled;\n    this.cpAlphaChannel = cpAlphaChannel;\n    this.cpOutputFormat = cpOutputFormat;\n\n    this.cpDialogDisplay = cpDialogDisplay;\n\n    this.cpIgnoredElements = cpIgnoredElements;\n\n    this.cpSaveClickOutside = cpSaveClickOutside;\n    this.cpCloseClickOutside = cpCloseClickOutside;\n\n    this.useRootViewContainer = cpUseRootViewContainer;\n\n    this.width = this.cpWidth = parseInt(cpWidth, 10);\n    this.height = this.cpHeight = parseInt(cpHeight, 10);\n\n    this.cpPosition = cpPosition;\n    this.cpPositionOffset = parseInt(cpPositionOffset, 10);\n\n    this.cpOKButton = cpOKButton;\n    this.cpOKButtonText = cpOKButtonText;\n    this.cpOKButtonClass = cpOKButtonClass;\n\n    this.cpCancelButton = cpCancelButton;\n    this.cpCancelButtonText = cpCancelButtonText;\n    this.cpCancelButtonClass = cpCancelButtonClass;\n\n    this.fallbackColor = cpFallbackColor || '#fff';\n\n    this.setPresetConfig(cpPresetLabel, cpPresetColors);\n\n    this.cpPresetColorsClass = cpPresetColorsClass;\n    this.cpMaxPresetColorsLength = cpMaxPresetColorsLength;\n    this.cpPresetEmptyMessage = cpPresetEmptyMessage;\n    this.cpPresetEmptyMessageClass = cpPresetEmptyMessageClass;\n\n    this.cpAddColorButton = cpAddColorButton;\n    this.cpAddColorButtonText = cpAddColorButtonText;\n    this.cpAddColorButtonClass = cpAddColorButtonClass;\n    this.cpRemoveColorButtonClass = cpRemoveColorButtonClass;\n\n    this.cpTriggerElement = cpTriggerElement;\n\n    if (!cpPositionRelativeToArrow) {\n      this.dialogArrowOffset = 0;\n    }\n\n    if (cpDialogDisplay === 'inline') {\n      this.dialogArrowSize = 0;\n      this.dialogArrowOffset = 0;\n    }\n\n    if (cpOutputFormat === 'hex' &&\n        cpAlphaChannel !== 'always' && cpAlphaChannel !== 'forced')\n    {\n      this.cpAlphaChannel = 'disabled';\n    }\n  }\n\n  public setColorMode(mode: string): void {\n    switch (mode.toString().toUpperCase()) {\n      case '1':\n      case 'C':\n      case 'COLOR':\n        this.cpColorMode = 1;\n        break;\n      case '2':\n      case 'G':\n      case 'GRAYSCALE':\n        this.cpColorMode = 2;\n        break;\n      case '3':\n      case 'P':\n      case 'PRESETS':\n        this.cpColorMode = 3;\n        break;\n      default:\n        this.cpColorMode = 1;\n    }\n  }\n\n  public setInitialColor(color: any): void {\n    this.initialColor = color;\n  }\n\n  public setPresetConfig(cpPresetLabel: string, cpPresetColors: string[]): void {\n    this.cpPresetLabel = cpPresetLabel;\n    this.cpPresetColors = cpPresetColors;\n  }\n\n  public setColorFromString(value: string, emit: boolean = true, update: boolean = true): void {\n    let hsva: Hsva | null;\n\n    if (this.cpAlphaChannel === 'always' || this.cpAlphaChannel === 'forced') {\n      hsva = this.service.stringToHsva(value, true);\n\n      if (!hsva && !this.hsva) {\n        hsva = this.service.stringToHsva(value, false);\n      }\n    } else {\n      hsva = this.service.stringToHsva(value, false);\n    }\n\n    if (!hsva && !this.hsva) {\n      hsva = this.service.stringToHsva(this.fallbackColor, false);\n    }\n\n    if (hsva) {\n      this.hsva = hsva;\n\n      this.sliderH = this.hsva.h;\n\n      if (this.cpOutputFormat === 'hex' && this.cpAlphaChannel === 'disabled') {\n        this.hsva.a = 1;\n      }\n\n      this.updateColorPicker(emit, update);\n    }\n  }\n\n  public onResize(): void {\n    if (this.position === 'fixed') {\n      this.setDialogPosition();\n    } else if (this.cpDialogDisplay !== 'inline') {\n      this.closeColorPicker();\n    }\n  }\n\n  public onDragEnd(slider: string): void {\n    this.directiveInstance.sliderDragEnd({ slider: slider, color: this.outputColor });\n  }\n\n  public onDragStart(slider: string): void {\n    this.directiveInstance.sliderDragStart({ slider: slider, color: this.outputColor });\n  }\n\n  public onMouseDown(event: MouseEvent): void {\n    if (this.show &&\n        !this.isIE10 && this.cpDialogDisplay === 'popup' &&\n        event.target !== this.directiveElementRef.nativeElement &&\n        !this.isDescendant(this.elRef.nativeElement, event.target) &&\n        !this.isDescendant(this.directiveElementRef.nativeElement, event.target) &&\n        this.cpIgnoredElements.filter((item: any) => item === event.target).length === 0)\n    {\n      if (this.cpSaveClickOutside) {\n        this.directiveInstance.colorSelected(this.outputColor);\n      } else {\n        this.hsva = null;\n\n        this.setColorFromString(this.initialColor, false);\n\n        if (this.cpCmykEnabled) {\n          this.directiveInstance.cmykChanged(this.cmykColor);\n        }\n\n        this.directiveInstance.colorChanged(this.initialColor);\n\n        this.directiveInstance.colorCanceled();\n      }\n\n      if (this.cpCloseClickOutside) {\n        this.closeColorPicker();\n      }\n    }\n  }\n\n  public onAcceptColor(event: Event): void {\n    event.stopPropagation();\n\n    if (this.outputColor) {\n      this.directiveInstance.colorSelected(this.outputColor);\n    }\n\n    if (this.cpDialogDisplay === 'popup') {\n      this.closeColorPicker();\n    }\n  }\n\n  public onCancelColor(event: Event): void {\n    this.hsva = null;\n\n    event.stopPropagation();\n\n    this.directiveInstance.colorCanceled();\n\n    this.setColorFromString(this.initialColor, true);\n\n    if (this.cpDialogDisplay === 'popup') {\n      if (this.cpCmykEnabled) {\n        this.directiveInstance.cmykChanged(this.cmykColor);\n      }\n\n      this.directiveInstance.colorChanged(this.initialColor, true);\n\n      this.closeColorPicker();\n    }\n  }\n\n  public onFormatToggle(change: number): void {\n    const availableFormats = this.dialogInputFields.length -\n      (this.cpCmykEnabled ? 0 : 1);\n\n    const nextFormat = (((this.dialogInputFields.indexOf(this.format) + change) %\n      availableFormats) + availableFormats) % availableFormats;\n\n    this.format = this.dialogInputFields[nextFormat];\n  }\n\n  public onColorChange(value: { s: number, v: number, rgX: number, rgY: number }): void {\n    this.hsva.s = value.s / value.rgX;\n    this.hsva.v = value.v / value.rgY;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'lightness',\n      value: this.hsva.v,\n      color: this.outputColor\n    });\n\n    this.directiveInstance.sliderChanged({\n      slider: 'saturation',\n      value: this.hsva.s,\n      color: this.outputColor\n    });\n  }\n\n  public onHueChange(value: { v: number, rgX: number }): void {\n    this.hsva.h = value.v / value.rgX;\n    this.sliderH = this.hsva.h;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'hue',\n      value: this.hsva.h,\n      color: this.outputColor\n    });\n  }\n\n  public onValueChange(value: { v: number, rgX: number }): void {\n    this.hsva.v = value.v / value.rgX;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'value',\n      value: this.hsva.v,\n      color: this.outputColor\n    });\n  }\n\n  public onAlphaChange(value: { v: number, rgX: number }): void {\n    this.hsva.a = value.v / value.rgX;\n\n    this.updateColorPicker();\n\n    this.directiveInstance.sliderChanged({\n      slider: 'alpha',\n      value: this.hsva.a,\n      color: this.outputColor\n    });\n  }\n\n  public onHexInput(value: string | null): void {\n    if (value === null) {\n      this.updateColorPicker();\n    } else {\n      if (value && value[0] !== '#') {\n        value = '#' + value;\n      }\n\n      let validHex = /^#([a-f0-9]{3}|[a-f0-9]{6})$/gi;\n\n      if (this.cpAlphaChannel === 'always') {\n        validHex = /^#([a-f0-9]{3}|[a-f0-9]{6}|[a-f0-9]{8})$/gi;\n      }\n\n      const valid = validHex.test(value);\n\n      if (valid) {\n        if (value.length < 5) {\n          value = '#' + value.substring(1)\n            .split('')\n            .map(c => c + c)\n            .join('');\n        }\n\n        if (this.cpAlphaChannel === 'forced') {\n          value += Math.round(this.hsva.a * 255).toString(16);\n        }\n\n        this.setColorFromString(value, true, false);\n      }\n\n      this.directiveInstance.inputChanged({\n        input: 'hex',\n        valid: valid,\n        value: value,\n        color: this.outputColor\n      });\n    }\n  }\n\n  public onRedInput(value: { v: number, rg: number }): void {\n    const rgba = this.service.hsvaToRgba(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      rgba.r = value.v / value.rg;\n\n      this.hsva = this.service.rgbaToHsva(rgba);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'red',\n      valid: valid,\n      value: rgba.r,\n      color: this.outputColor\n    });\n  }\n\n  public onBlueInput(value: { v: number, rg: number }): void {\n    const rgba = this.service.hsvaToRgba(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      rgba.b = value.v / value.rg;\n\n      this.hsva = this.service.rgbaToHsva(rgba);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'blue',\n      valid: valid,\n      value: rgba.b,\n      color: this.outputColor\n    });\n  }\n\n  public onGreenInput(value: { v: number, rg: number }): void {\n    const rgba = this.service.hsvaToRgba(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      rgba.g = value.v / value.rg;\n\n      this.hsva = this.service.rgbaToHsva(rgba);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'green',\n      valid: valid,\n      value: rgba.g,\n      color: this.outputColor\n    });\n  }\n\n  public onHueInput(value: { v: number, rg: number }) {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      this.hsva.h = value.v / value.rg;\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'hue',\n      valid: valid,\n      value: this.hsva.h,\n      color: this.outputColor\n    });\n  }\n\n  public onValueInput(value: { v: number, rg: number }): void {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      this.hsva.v = value.v / value.rg;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'value',\n      valid: valid,\n      value: this.hsva.v,\n      color: this.outputColor\n    });\n  }\n\n  public onAlphaInput(value: { v: number, rg: number }): void {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      this.hsva.a = value.v / value.rg;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'alpha',\n      valid: valid,\n      value: this.hsva.a,\n      color: this.outputColor\n    });\n  }\n\n  public onLightnessInput(value: { v: number, rg: number }): void {\n    const hsla = this.service.hsva2hsla(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      hsla.l = value.v / value.rg;\n\n      this.hsva = this.service.hsla2hsva(hsla);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'lightness',\n      valid: valid,\n      value: hsla.l,\n      color: this.outputColor\n    });\n  }\n\n  public onSaturationInput(value: { v: number, rg: number }): void {\n    const hsla = this.service.hsva2hsla(this.hsva);\n\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n    if (valid) {\n      hsla.s = value.v / value.rg;\n\n      this.hsva = this.service.hsla2hsva(hsla);\n\n      this.sliderH = this.hsva.h;\n\n      this.updateColorPicker();\n    }\n\n    this.directiveInstance.inputChanged({\n      input: 'saturation',\n      valid: valid,\n      value: hsla.s,\n      color: this.outputColor\n    });\n  }\n\n  public onCyanInput(value: { v: number, rg: number }): void {\n     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.c = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'cyan',\n      valid: true,\n      value: this.cmyk.c,\n      color: this.outputColor\n    });\n  }\n\n   public onMagentaInput(value: { v: number, rg: number }): void {\n    const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.m = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'magenta',\n      valid: true,\n      value: this.cmyk.m,\n      color: this.outputColor\n    });\n  }\n\n  public onYellowInput(value: { v: number, rg: number }): void {\n     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.y = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'yellow',\n      valid: true,\n      value: this.cmyk.y,\n      color: this.outputColor\n    });\n  }\n\n   public onBlackInput(value: { v: number, rg: number }): void {\n     const valid = !isNaN(value.v) && value.v >= 0 && value.v <= value.rg;\n\n     if (valid) {\n      this.cmyk.k = value.v;\n\n      this.updateColorPicker(false, true, true);\n    }\n\n     this.directiveInstance.inputChanged({\n      input: 'black',\n      valid: true,\n      value: this.cmyk.k,\n      color: this.outputColor\n    });\n  }\n\n  public onAddPresetColor(event: any, value: string): void {\n    event.stopPropagation();\n\n    if (!this.cpPresetColors.filter((color) => (color === value)).length) {\n      this.cpPresetColors = this.cpPresetColors.concat(value);\n\n      this.directiveInstance.presetColorsChanged(this.cpPresetColors);\n    }\n  }\n\n  public onRemovePresetColor(event: any, value: string): void {\n    event.stopPropagation();\n\n    this.cpPresetColors = this.cpPresetColors.filter((color) => (color !== value));\n\n    this.directiveInstance.presetColorsChanged(this.cpPresetColors);\n  }\n\n  // Private helper functions for the color picker dialog status\n\n  private openColorPicker(): void {\n    if (!this.show) {\n      this.show = true;\n      this.hidden = true;\n\n      setTimeout(() => {\n        this.hidden = false;\n\n        this.setDialogPosition();\n\n        this.cdRef.detectChanges();\n      }, 0);\n\n      this.directiveInstance.stateChanged(true);\n\n      if (!this.isIE10) {\n        document.addEventListener('mousedown', this.listenerMouseDown);\n        document.addEventListener('touchstart', this.listenerMouseDown);\n      }\n\n      window.addEventListener('resize', this.listenerResize);\n    }\n  }\n\n  private closeColorPicker(): void {\n    if (this.show) {\n      this.show = false;\n\n      this.directiveInstance.stateChanged(false);\n\n      if (!this.isIE10) {\n        document.removeEventListener('mousedown', this.listenerMouseDown);\n        document.removeEventListener('touchstart', this.listenerMouseDown);\n      }\n\n      window.removeEventListener('resize', this.listenerResize);\n\n      if (!this.cdRef['destroyed']) {\n        this.cdRef.detectChanges();\n      }\n    }\n  }\n\n  private updateColorPicker(emit: boolean = true, update: boolean = true, cmykInput: boolean = false): void {\n    if (this.sliderDimMax) {\n      if (this.cpColorMode === 2) {\n        this.hsva.s = 0;\n      }\n\n      let hue: Rgba, hsla: Hsla, rgba: Rgba;\n\n      const lastOutput = this.outputColor;\n\n      hsla = this.service.hsva2hsla(this.hsva);\n\n      if (!this.cpCmykEnabled) {\n        rgba = this.service.denormalizeRGBA(this.service.hsvaToRgba(this.hsva));\n      } else {\n        if (!cmykInput) {\n          rgba = this.service.hsvaToRgba(this.hsva);\n\n          this.cmyk = this.service.denormalizeCMYK(this.service.rgbaToCmyk(rgba));\n        } else {\n          rgba = this.service.cmykToRgb(this.service.normalizeCMYK(this.cmyk));\n\n          this.hsva = this.service.rgbaToHsva(rgba);\n        }\n\n        rgba = this.service.denormalizeRGBA(rgba);\n\n        this.sliderH = this.hsva.h;\n      }\n\n      hue = this.service.denormalizeRGBA(this.service.hsvaToRgba(new Hsva(this.sliderH || this.hsva.h, 1, 1, 1)));\n\n      if (update) {\n        this.hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100), Math.round(hsla.l * 100),\n          Math.round(hsla.a * 100) / 100);\n\n        this.rgbaText = new Rgba(rgba.r, rgba.g, rgba.b, Math.round(rgba.a * 100) / 100);\n\n        if (this.cpCmykEnabled) {\n          this.cmykText = new Cmyk(this.cmyk.c, this.cmyk.m, this.cmyk.y, this.cmyk.k,\n            Math.round(this.cmyk.a * 100) / 100);\n        }\n\n        const allowHex8 = this.cpAlphaChannel === 'always';\n\n        this.hexText = this.service.rgbaToHex(rgba, allowHex8);\n        this.hexAlpha = this.rgbaText.a;\n      }\n\n      if (this.cpOutputFormat === 'auto') {\n        if (this.format !== ColorFormats.RGBA && this.format !== ColorFormats.CMYK) {\n          if (this.hsva.a < 1) {\n            this.format = this.hsva.a < 1 ? ColorFormats.RGBA : ColorFormats.HEX;\n          }\n        }\n      }\n\n      this.hueSliderColor = 'rgb(' + hue.r + ',' + hue.g + ',' + hue.b + ')';\n      this.alphaSliderColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n\n      this.outputColor = this.service.outputFormat(this.hsva, this.cpOutputFormat, this.cpAlphaChannel);\n      this.selectedColor = this.service.outputFormat(this.hsva, 'rgba', null);\n\n      if (this.format !== ColorFormats.CMYK) {\n        this.cmykColor = '';\n      } else {\n        if (this.cpAlphaChannel === 'always' || this.cpAlphaChannel === 'enabled' ||\n          this.cpAlphaChannel === 'forced')\n        {\n          const alpha = Math.round(this.cmyk.a * 100) / 100;\n\n          this.cmykColor = `cmyka(${this.cmyk.c},${this.cmyk.m},${this.cmyk.y},${this.cmyk.k},${alpha})`;\n        } else {\n          this.cmykColor = `cmyk(${this.cmyk.c},${this.cmyk.m},${this.cmyk.y},${this.cmyk.k})`;\n        }\n      }\n\n      this.slider = new SliderPosition(\n        (this.sliderH || this.hsva.h) * this.sliderDimMax.h - 8,\n        this.hsva.s * this.sliderDimMax.s - 8,\n        (1 - this.hsva.v) * this.sliderDimMax.v - 8,\n        this.hsva.a * this.sliderDimMax.a - 8\n      );\n\n      if (emit && lastOutput !== this.outputColor) {\n        if (this.cpCmykEnabled) {\n          this.directiveInstance.cmykChanged(this.cmykColor);\n        }\n\n        this.directiveInstance.colorChanged(this.outputColor);\n      }\n    }\n  }\n\n  // Private helper functions for the color picker dialog positioning\n\n  private setDialogPosition(): void {\n    if (this.cpDialogDisplay === 'inline') {\n      this.position = 'relative';\n    } else {\n      let position = 'static', transform = '', style;\n\n      let parentNode: any = null, transformNode: any = null;\n\n      let node = this.directiveElementRef.nativeElement.parentNode;\n\n      const dialogHeight = this.dialogElement.nativeElement.offsetHeight;\n\n      while (node !== null && node.tagName !== 'HTML') {\n        style = window.getComputedStyle(node);\n        position = style.getPropertyValue('position');\n        transform = style.getPropertyValue('transform');\n\n        if (position !== 'static' && parentNode === null) {\n          parentNode = node;\n        }\n\n        if (transform && transform !== 'none' && transformNode === null) {\n          transformNode = node;\n        }\n\n        if (position === 'fixed') {\n          parentNode = transformNode;\n\n          break;\n        }\n\n        node = node.parentNode;\n      }\n\n      const boxDirective = this.createDialogBox(this.directiveElementRef.nativeElement, (position !== 'fixed'));\n\n      if (this.useRootViewContainer || (position === 'fixed' &&\n         (!parentNode || parentNode instanceof HTMLUnknownElement)))\n      {\n        this.top = boxDirective.top;\n        this.left = boxDirective.left;\n      } else {\n        if (parentNode === null) {\n          parentNode = node;\n        }\n\n        const boxParent = this.createDialogBox(parentNode, (position !== 'fixed'));\n\n        this.top = boxDirective.top - boxParent.top;\n        this.left = boxDirective.left - boxParent.left;\n      }\n\n      if (position === 'fixed') {\n        this.position = 'fixed';\n      }\n\n      let usePosition = this.cpPosition;\n\n      if (this.cpPosition === 'auto') {\n        const dialogBounds = this.dialogElement.nativeElement.getBoundingClientRect();\n        const triggerBounds = this.cpTriggerElement.nativeElement.getBoundingClientRect();\n        usePosition = calculateAutoPositioning(dialogBounds, triggerBounds);\n      }\n\n      if (usePosition === 'top') {\n        this.arrowTop = dialogHeight - 1;\n\n        this.top -= dialogHeight + this.dialogArrowSize;\n        this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;\n      } else if (usePosition === 'bottom') {\n        this.top += boxDirective.height + this.dialogArrowSize;\n        this.left += this.cpPositionOffset / 100 * boxDirective.width - this.dialogArrowOffset;\n      } else if (usePosition === 'top-left' || usePosition === 'left-top') {\n        this.top -= dialogHeight - boxDirective.height + boxDirective.height * this.cpPositionOffset / 100;\n        this.left -= this.cpWidth + this.dialogArrowSize - 2 - this.dialogArrowOffset;\n      } else if (usePosition === 'top-right' || usePosition === 'right-top') {\n        this.top -= dialogHeight - boxDirective.height + boxDirective.height * this.cpPositionOffset / 100;\n        this.left += boxDirective.width + this.dialogArrowSize - 2 - this.dialogArrowOffset;\n      } else if (usePosition === 'left' || usePosition === 'bottom-left' ||  usePosition === 'left-bottom') {\n        this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset;\n        this.left -= this.cpWidth + this.dialogArrowSize - 2;\n      } else { // usePosition === 'right' || usePosition === 'bottom-right' || usePosition === 'right-bottom'\n        this.top += boxDirective.height * this.cpPositionOffset / 100 - this.dialogArrowOffset;\n        this.left += boxDirective.width + this.dialogArrowSize - 2;\n      }\n\n      this.cpUsePosition = usePosition;\n    }\n  }\n\n  // Private helper functions for the color picker dialog positioning and opening\n\n  private isDescendant(parent: any, child: any): boolean {\n    let node: any = child.parentNode;\n\n    while (node !== null) {\n      if (node === parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  }\n\n  private createDialogBox(element: any, offset: boolean): any {\n    return {\n      top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\n      left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n}\n","import { Directive, OnChanges, OnDestroy, Input, Output, EventEmitter,\n  HostListener, ApplicationRef, ComponentRef, ElementRef, ViewContainerRef,\n  Injector, ReflectiveInjector, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\n\nimport { ColorPickerService } from './color-picker.service';\nimport { ColorPickerComponent } from './color-picker.component';\n\nimport { AlphaChannel, ColorMode, OutputFormat } from './helpers';\n\n@Directive({\n  selector: '[colorPicker]',\n  exportAs: 'ngxColorPicker'\n})\nexport class ColorPickerDirective implements OnChanges, OnDestroy {\n  private dialog: any;\n\n  private dialogCreated: boolean = false;\n  private ignoreChanges: boolean = false;\n\n  private cmpRef: ComponentRef<ColorPickerComponent>;\n  private viewAttachedToAppRef: boolean = false;\n\n  @Input() colorPicker: string;\n\n  @Input() cpWidth: string = '230px';\n  @Input() cpHeight: string = 'auto';\n\n  @Input() cpToggle: boolean = false;\n  @Input() cpDisabled: boolean = false;\n\n  @Input() cpIgnoredElements: any = [];\n\n  @Input() cpFallbackColor: string = '';\n\n  @Input() cpColorMode: ColorMode = 'color';\n\n  @Input() cpCmykEnabled: boolean = false;\n\n  @Input() cpOutputFormat: OutputFormat = 'auto';\n  @Input() cpAlphaChannel: AlphaChannel = 'enabled';\n\n  @Input() cpDisableInput: boolean = false;\n\n  @Input() cpDialogDisplay: string = 'popup';\n\n  @Input() cpSaveClickOutside: boolean = true;\n  @Input() cpCloseClickOutside: boolean = true;\n\n  @Input() cpUseRootViewContainer: boolean = false;\n\n  @Input() cpPosition: string = 'auto';\n  @Input() cpPositionOffset: string = '0%';\n  @Input() cpPositionRelativeToArrow: boolean = false;\n\n  @Input() cpOKButton: boolean = false;\n  @Input() cpOKButtonText: string = 'OK';\n  @Input() cpOKButtonClass: string = 'cp-ok-button-class';\n\n  @Input() cpCancelButton: boolean = false;\n  @Input() cpCancelButtonText: string = 'Cancel';\n  @Input() cpCancelButtonClass: string = 'cp-cancel-button-class';\n\n  @Input() cpPresetLabel: string = 'Preset colors';\n  @Input() cpPresetColors: string[];\n  @Input() cpPresetColorsClass: string = 'cp-preset-colors-class';\n  @Input() cpMaxPresetColorsLength: number = 6;\n\n  @Input() cpPresetEmptyMessage: string = 'No colors added';\n  @Input() cpPresetEmptyMessageClass: string = 'preset-empty-message';\n\n  @Input() cpAddColorButton: boolean = false;\n  @Input() cpAddColorButtonText: string = 'Add color';\n  @Input() cpAddColorButtonClass: string = 'cp-add-color-button-class';\n\n  @Input() cpRemoveColorButtonClass: string = 'cp-remove-color-button-class';\n\n  @Output() cpInputChange = new EventEmitter<{input: string, value: number | string, color: string}>(true);\n\n  @Output() cpToggleChange = new EventEmitter<boolean>(true);\n\n  @Output() cpSliderChange = new EventEmitter<{slider: string, value: string | number, color: string}>(true);\n  @Output() cpSliderDragEnd = new EventEmitter<{slider: string, color: string}>(true);\n  @Output() cpSliderDragStart = new EventEmitter<{slider: string, color: string}>(true);\n\n  @Output() colorPickerOpen = new EventEmitter<string>(true);\n  @Output() colorPickerClose = new EventEmitter<string>(true);\n\n  @Output() colorPickerCancel = new EventEmitter<string>(true);\n  @Output() colorPickerSelect = new EventEmitter<string>(true);\n  @Output() colorPickerChange = new EventEmitter<string>(false);\n\n  @Output() cpCmykColorChange = new EventEmitter<string>(true);\n\n  @Output() cpPresetColorsChange = new EventEmitter<any>(true);\n\n  @HostListener('click') handleClick(): void {\n    this.inputFocus();\n  }\n\n  @HostListener('focus') handleFocus(): void {\n    this.inputFocus();\n  }\n\n  @HostListener('input', ['$event']) handleInput(event: any): void {\n    this.inputChange(event);\n  }\n\n  constructor(private injector: Injector, private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,\n    private _service: ColorPickerService) {}\n\n  ngOnDestroy(): void {\n    if (this.cmpRef != null) {\n      if (this.viewAttachedToAppRef) {\n        this.appRef.detachView(this.cmpRef.hostView);\n      }\n\n      this.cmpRef.destroy();\n\n      this.cmpRef = null;\n      this.dialog = null;\n    }\n  }\n\n  ngOnChanges(changes: any): void {\n    if (changes.cpToggle && !this.cpDisabled) {\n      if (changes.cpToggle.currentValue) {\n        this.openDialog();\n      } else if (!changes.cpToggle.currentValue) {\n        this.closeDialog();\n      }\n    }\n\n    if (changes.colorPicker) {\n      if (this.dialog && !this.ignoreChanges) {\n        if (this.cpDialogDisplay === 'inline') {\n          this.dialog.setInitialColor(changes.colorPicker.currentValue);\n        }\n\n        this.dialog.setColorFromString(changes.colorPicker.currentValue, false);\n\n        if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\n          this.cmpRef.changeDetectorRef.detectChanges();\n        }\n      }\n\n      this.ignoreChanges = false;\n    }\n\n    if (changes.cpPresetLabel || changes.cpPresetColors) {\n      if (this.dialog) {\n        this.dialog.setPresetConfig(this.cpPresetLabel, this.cpPresetColors);\n      }\n    }\n  }\n\n  public openDialog(): void {\n    if (!this.dialogCreated) {\n      let vcRef = this.vcRef;\n\n      this.dialogCreated = true;\n      this.viewAttachedToAppRef = false;\n\n      if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\n        const classOfRootComponent = this.appRef.componentTypes[0];\n        const appInstance = this.injector.get(classOfRootComponent, Injector.NULL);\n\n        if (appInstance !== Injector.NULL) {\n          vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;\n\n          if (vcRef === this.vcRef) {\n            console.warn('You are using cpUseRootViewContainer, ' +\n              'but the root component is not exposing viewContainerRef!' +\n              'Please expose it by adding \\'public vcRef: ViewContainerRef\\' to the constructor.');\n          }\n        } else {\n          this.viewAttachedToAppRef = true;\n        }\n      }\n\n      const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);\n\n      if (this.viewAttachedToAppRef) {\n        this.cmpRef = compFactory.create(this.injector);\n        this.appRef.attachView(this.cmpRef.hostView);\n        document.body.appendChild((this.cmpRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement);\n      } else {\n        const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\n\n        this.cmpRef = vcRef.createComponent(compFactory, 0, injector, []);\n      }\n\n      this.cmpRef.instance.setupDialog(this, this.elRef, this.colorPicker,\n        this.cpWidth, this.cpHeight, this.cpDialogDisplay, this.cpFallbackColor, this.cpColorMode,\n        this.cpCmykEnabled, this.cpAlphaChannel, this.cpOutputFormat, this.cpDisableInput,\n        this.cpIgnoredElements, this.cpSaveClickOutside, this.cpCloseClickOutside,\n        this.cpUseRootViewContainer, this.cpPosition, this.cpPositionOffset,\n        this.cpPositionRelativeToArrow, this.cpPresetLabel, this.cpPresetColors,\n        this.cpPresetColorsClass, this.cpMaxPresetColorsLength, this.cpPresetEmptyMessage,\n        this.cpPresetEmptyMessageClass, this.cpOKButton, this.cpOKButtonClass,\n        this.cpOKButtonText, this.cpCancelButton, this.cpCancelButtonClass,\n        this.cpCancelButtonText, this.cpAddColorButton, this.cpAddColorButtonClass,\n        this.cpAddColorButtonText, this.cpRemoveColorButtonClass, this.elRef);\n\n      this.dialog = this.cmpRef.instance;\n\n      if (this.vcRef !== vcRef) {\n        this.cmpRef.changeDetectorRef.detectChanges();\n      }\n    } else if (this.dialog) {\n      this.dialog.openDialog(this.colorPicker);\n    }\n  }\n\n  public closeDialog(): void {\n    if (this.dialog && this.cpDialogDisplay === 'popup') {\n      this.dialog.closeDialog();\n    }\n  }\n\n  public cmykChanged(value: string): void {\n    this.cpCmykColorChange.emit(value);\n  }\n\n  public stateChanged(state: boolean): void {\n    this.cpToggleChange.emit(state);\n\n    if (state) {\n      this.colorPickerOpen.emit(this.colorPicker);\n    } else {\n      this.colorPickerClose.emit(this.colorPicker);\n    }\n  }\n\n  public colorChanged(value: string, ignore: boolean = true): void {\n    this.ignoreChanges = ignore;\n\n    this.colorPickerChange.emit(value);\n  }\n\n  public colorSelected(value: string): void {\n    this.colorPickerSelect.emit(value);\n  }\n\n  public colorCanceled(): void {\n    this.colorPickerCancel.emit();\n  }\n\n  public inputFocus(): void {\n    const element = this.elRef.nativeElement;\n\n    const ignored = this.cpIgnoredElements.filter((item: any) => item === element);\n\n    if (!this.cpDisabled && !ignored.length) {\n      if (typeof document !== 'undefined' && element === document.activeElement) {\n        this.openDialog();\n      } else if (!this.dialog || !this.dialog.show) {\n        this.openDialog();\n      } else {\n        this.closeDialog();\n      }\n    }\n  }\n\n  public inputChange(event: any): void {\n    if (this.dialog) {\n      this.dialog.setColorFromString(event.target.value, true);\n    } else {\n      this.colorPicker = event.target.value;\n\n      this.colorPickerChange.emit(this.colorPicker);\n    }\n  }\n\n  public inputChanged(event: any): void {\n    this.cpInputChange.emit(event);\n  }\n\n  public sliderChanged(event: any): void {\n    this.cpSliderChange.emit(event);\n  }\n\n  public sliderDragEnd(event: { slider: string, color: string }): void {\n    this.cpSliderDragEnd.emit(event);\n  }\n\n  public sliderDragStart(event: { slider: string, color: string }): void {\n    this.cpSliderDragStart.emit(event);\n  }\n\n  public presetColorsChanged(value: any[]): void {\n    this.cpPresetColorsChange.emit(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TextDirective, SliderDirective } from './helpers';\n\nimport { ColorPickerComponent } from './color-picker.component';\nimport { ColorPickerDirective } from './color-picker.directive';\n\n@NgModule({\n  imports: [ CommonModule ],\n  exports: [ ColorPickerDirective ],\n  declarations: [ ColorPickerComponent, ColorPickerDirective, TextDirective, SliderDirective ],\n  entryComponents: [ ColorPickerComponent ]\n})\nexport class ColorPickerModule {}\n"]}